DROP TABLE IF EXISTS TB_TIPO_PESSOA CASCADE;
DROP TABLE IF EXISTS TB_PESSOA CASCADE;
DROP TABLE IF EXISTS TB_TIPO_LANCAMENTO CASCADE;
DROP TABLE IF EXISTS TB_PRODUTO_SERVICO CASCADE;
DROP TABLE IF EXISTS TB_LANCAMENTO CASCADE;
DROP TABLE IF EXISTS TB_LANCAMENTO_PRODUTO_SERVICO CASCADE;
DROP TABLE IF EXISTS TB_CONTA_BANCARIA CASCADE;
DROP TABLE IF EXISTS TB_FORMA_PAGAMENTO CASCADE;
DROP TABLE IF EXISTS TB_PAGAMENTO CASCADE;
DROP TABLE IF EXISTS TB_PARCELAMENTO CASCADE;
DROP TABLE IF EXISTS TB_LANCAMENTO_PAGAMENTO CASCADE;
DROP TABLE IF EXISTS TB_TIPO_PESSOA CASCADE;

-- FUNC0001 - GERENCIADOR DE PESSOAS

CREATE TABLE IF NOT EXISTS TB_TIPO_PESSOA (
    CODIGO SERIAL NOT NULL,
    DESCRICAO VARCHAR(85) NOT NULL,
    CONSTRAINT PK_TIPO_PESSOA PRIMARY KEY (CODIGO)
);

CREATE TABLE IF NOT EXISTS TB_PESSOA (
    CODIGO SERIAL NOT NULL,
    ID_TIPO_PESSOA INTEGER not null,
    NOME VARCHAR(85) NOT NULL,
    CONSTRAINT PK_PESSOA PRIMARY KEY (CODIGO),
    CONSTRAINT FK_TIPO_PESSOA FOREIGN KEY (ID_TIPO_PESSOA) REFERENCES TB_TIPO_PESSOA (CODIGO)
);

-- FUNC0002 - GERENCIADOR DE LANCAMENTO FINANCEIRO

CREATE TABLE IF NOT EXISTS TB_TIPO_LANCAMENTO (
    CODIGO SERIAL NOT NULL,
    IDENTIFICADOR VARCHAR(85) NOT NULL,
    DESCRICAO VARCHAR(85) NOT NULL,
    CONSTRAINT PK_TIPO_LANCAMENTO PRIMARY KEY (CODIGO)
);

CREATE TABLE IF NOT EXISTS TB_PRODUTO_SERVICO (
    CODIGO SERIAL NOT null,
    DESCRICAO VARCHAR(85) NOT NULL,
    CONSTRAINT PK_PRODUTO_SERVICO PRIMARY KEY (CODIGO)
);

CREATE TABLE IF NOT EXISTS TB_LANCAMENTO (
    CODIGO SERIAL NOT NULL,
    ID_PESSOA_FAVORECIDA INTEGER NOT NULL,
    ID_PESSOA_RESPONSAVEL_LANCAMENTO INTEGER NOT NULL,
    ID_TIPO_LANCAMENTO INTEGER NOT NULL,
    IDENTIFICADOR VARCHAR(100) NOT NULL,
    DATA_LANCAMENTO DATE NOT NULL,
    CONSTRAINT PK_LANCAMENTO PRIMARY KEY (CODIGO),
    CONSTRAINT FK_PESSOA_FAVORECIDA FOREIGN KEY (ID_PESSOA_FAVORECIDA) REFERENCES TB_PESSOA(CODIGO),
    CONSTRAINT FK_PESSOA_RESPONSAVEL_LANCAMENTO FOREIGN KEY (ID_PESSOA_RESPONSAVEL_LANCAMENTO) REFERENCES TB_PESSOA(CODIGO),
    CONSTRAINT FK_TIPO_LANCAMENTO FOREIGN KEY (ID_TIPO_LANCAMENTO) REFERENCES TB_TIPO_LANCAMENTO(CODIGO)
);

CREATE TABLE IF NOT EXISTS TB_LANCAMENTO_PRODUTO_SERVICO (
    CODIGO SERIAL NOT NULL,
    ID_LANCAMENTO INTEGER NOT NULL,
    ID_PRODUTO_SERVICO INTEGER NOT NULL,
    VALOR FLOAT NOT NULL,
    CONSTRAINT PK_LANCAMENTO_PRODUTO_SERVICO PRIMARY KEY (CODIGO),
    CONSTRAINT FK_LANCAMENTO FOREIGN KEY (ID_LANCAMENTO) REFERENCES TB_LANCAMENTO(CODIGO),
    CONSTRAINT FK_PRODUTO_SERVICO FOREIGN KEY (ID_PRODUTO_SERVICO) REFERENCES TB_PRODUTO_SERVICO(CODIGO)
);

CREATE TABLE IF NOT EXISTS TB_CONTA_BANCARIA (
    CODIGO SERIAL NOT NULL,
    ID_PESSOA_INSTITUICAO_FINANCEIRA INTEGER NOT NULL,
    ID_PESSOA_TITULAR INTEGER NOT NULL,
    DATA_ABERTURA DATE NOT NULL,
    DATA_FECHAMENTO DATE NULL,
    SALDO FLOAT NOT NULL,
    CONSTRAINT PK_CONTA_BANCARIA PRIMARY KEY (CODIGO),
    CONSTRAINT FK_PESSOA_INSTITUICAO_FINANCEIRA FOREIGN KEY (ID_PESSOA_INSTITUICAO_FINANCEIRA) REFERENCES TB_PESSOA(CODIGO),
    CONSTRAINT FK_PESSOA_TITULAR FOREIGN KEY (ID_PESSOA_TITULAR) REFERENCES TB_PESSOA(CODIGO)
);

CREATE TABLE IF NOT EXISTS TB_FORMA_PAGAMENTO (
    CODIGO SERIAL NOT NULL,
    DESCRICAO VARCHAR(85) NOT NULL,
    CONSTRAINT PK_FORMA_PAGAMENTO PRIMARY KEY (CODIGO)
);

CREATE TABLE IF NOT EXISTS TB_PAGAMENTO (
    CODIGO SERIAL NOT NULL,
    ID_CONTA_BANCARIA INTEGER NOT NULL,
    ID_FORMA_PAGAMENTO INTEGER NOT NULL,
    DATA_PAGAMENTO DATE NOT NULL,
    CONSTRAINT PK_PAGAMENTO PRIMARY KEY (CODIGO),
    CONSTRAINT FK_CONTA_BANCARIA FOREIGN KEY (ID_CONTA_BANCARIA) REFERENCES TB_CONTA_BANCARIA(CODIGO),
    CONSTRAINT FK_FORMA_PAGAMENTO FOREIGN KEY (ID_FORMA_PAGAMENTO) REFERENCES TB_FORMA_PAGAMENTO(CODIGO)
);


CREATE TABLE IF NOT EXISTS TB_LANCAMENTO_PAGAMENTO (
    CODIGO SERIAL NOT NULL,
    ID_LANCAMENTO INTEGER NOT NULL,
    ID_PAGAMENTO INTEGER NOT NULL,
    VALOR FLOAT NOT NULL,
    CONSTRAINT PK_LANCAMENTO_PAGAMENTO PRIMARY KEY (CODIGO),
    CONSTRAINT FK_LANCAMENTO FOREIGN KEY (ID_LANCAMENTO) REFERENCES TB_LANCAMENTO(CODIGO),
    CONSTRAINT FK_PAGAMENTO FOREIGN KEY (ID_PAGAMENTO) REFERENCES TB_PAGAMENTO(CODIGO)
);

CREATE TABLE IF NOT EXISTS TB_PARCELAMENTO (
    CODIGO SERIAL NOT NULL,
    ID_PAGAMENTO INTEGER NOT NULL,
    NUMERO INTEGER NOT NULL,
    VALOR FLOAT NOT NULL,
    CONSTRAINT PK_PARCELAMENTO PRIMARY KEY (CODIGO),
    CONSTRAINT FK_PAGAMENTO FOREIGN KEY (ID_PAGAMENTO) REFERENCES TB_PAGAMENTO(CODIGO)
);

-- DML

INSERT INTO TB_TIPO_PESSOA (DESCRICAO) values ('Pessoa Física');
INSERT INTO TB_TIPO_PESSOA (DESCRICAO) values ('Pessoa Jurídica');

INSERT INTO TB_PESSOA (ID_TIPO_PESSOA, NOME) values (1, 'José Quintino');
INSERT INTO TB_PESSOA (ID_TIPO_PESSOA, NOME) values (2, 'Banco do Brasil');
INSERT INTO TB_PESSOA (ID_TIPO_PESSOA, NOME) values (2, 'Amazon Brasil');

INSERT INTO TB_TIPO_LANCAMENTO (IDENTIFICADOR, DESCRICAO) VALUES 
	('RECEITA_FIXA', 'Receita Fixa'), 
	('RECEITA_VARIAVEL', 'Receita Variável'), 
	('DESPESA_FIXA', 'Despesa Fixa'), 
	('DESPESA_VARIAVEL', 'Despesa Variável'), 
	('EMPRESTIMO_CONCESSAO','Empréstimo'), 
	('EMPRESTIMO_ADQUIRICAO','Empréstimo');
	
INSERT INTO TB_PRODUTO_SERVICO (DESCRICAO) VALUES ('IPHONE 13 128GB');

INSERT INTO TB_LANCAMENTO (ID_PESSOA_FAVORECIDA, ID_PESSOA_RESPONSAVEL_LANCAMENTO, ID_TIPO_LANCAMENTO, IDENTIFICADOR, DATA_LANCAMENTO) VALUES (
	(select CODIGO from TB_PESSOA where NOME like 'José Quintino'),
	(select CODIGO from TB_PESSOA where NOME like 'Banco do Brasil'),
	(select CODIGO from TB_TIPO_LANCAMENTO where IDENTIFICADOR like 'DESPESA_VARIAVEL'),
	'LANCAMENTO-22052023-DESPESA-VARIAVEL',
	NOW()
);

INSERT INTO TB_LANCAMENTO_PRODUTO_SERVICO (ID_LANCAMENTO, ID_PRODUTO_SERVICO, VALOR) VALUES (
	(select CODIGO from TB_LANCAMENTO where identificador like 'LANCAMENTO-22052023-DESPESA-VARIAVEL'),
	(select CODIGO from TB_PRODUTO_SERVICO where DESCRICAO like 'IPHONE 13 128GB'),
	4364.10
);

INSERT INTO TB_CONTA_BANCARIA (ID_PESSOA_INSTITUICAO_FINANCEIRA, ID_PESSOA_TITULAR, DATA_ABERTURA, DATA_FECHAMENTO, SALDO) VALUES (
	(select CODIGO from TB_PESSOA where NOME like 'Banco do Brasil'),
	(select CODIGO from TB_PESSOA where NOME like 'José Quintino'),
	now(),
	null,
	5000
);

INSERT INTO TB_FORMA_PAGAMENTO (DESCRICAO) VALUES ('Dinheiro');

INSERT INTO TB_PAGAMENTO (ID_CONTA_BANCARIA, ID_FORMA_PAGAMENTO, DATA_PAGAMENTO) VALUES (
	1, 1, now()
);

INSERT INTO TB_LANCAMENTO_PAGAMENTO (ID_LANCAMENTO, ID_PAGAMENTO, VALOR) VALUES (
	1, 1, 4364.10
);

INSERT INTO TB_PARCELAMENTO (ID_PAGAMENTO, NUMERO, VALOR) VALUES (
	1, 1, 4364.10
);

-- DML
SELECT *
FROM TB_LANCAMENTO LANCAMENTO
JOIN TB_LANCAMENTO_PRODUTO_SERVICO LANCAMENTO_PRODUTO_SERVICO ON LANCAMENTO_PRODUTO_SERVICO.ID_LANCAMENTO = LANCAMENTO.CODIGO
JOIN TB_LANCAMENTO_PAGAMENTO LANCAMENTO_PAGAMENTO ON LANCAMENTO_PAGAMENTO.ID_LANCAMENTO = LANCAMENTO.CODIGO;

